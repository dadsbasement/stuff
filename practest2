
isnumeric is for strings isdigit is for list.

email adresss 
split @
join 
split .

tuple() not indexed based



Given a string of multiple words separated by single spaces, return a new string with the sentence reversed. 
The words themselves should remain as they are.
For example, given 'it is accepted as a masterpiece on strategy',
the returned string should be 'strategy on masterpiece a as accepted is it'.

return ' '.join(reversed([w for w in sentence.split()]))


def q1(sentence):
    a = sentence.split()
    a.reverse()
    result = " ".join(a)
    return result
    
 ---------------------------------------------------------------------------
 Given a positive integer, return its string representation with commas seperating groups of 3 digits.
For example, given 65535 the returned string should be '65,535'.

numbers = "{:,}".format(n)

-----------------------------------------------------------------------------
3  Given two lists of integers, return a sorted list that contains all integers from both lists in descending order.
For example, given [3,4,9] and [8,1,5] the returned list should be [9,8,5,4,3,1]. The returned list may contain duplicates.

return list(reversed(sorted(lst0 + lst1)))
+/
a = lst0+lst1
a = sorted(a)
a = reversed(a)
return list(a)
+/
def q1(lst0, lst1):
    l3 = []
    for i in lst0:
        l3.append(i)
    for x in lst1:
        l3.append(x)
    l3.sort(reverse=True)
    return l3
  ---------------------------------------------------------------------------
 4   Given 3 scores in the range [0-100] inclusive, return 'GO' if the average score is greater than 50.
  Otherwise return 'NOGO'.
  
  def q1(s1,s2,s3):
    sumz = (s1 + s2 + s3)
    average = sumz / 3
    if average > 50:def q1(f0, f1):
    pass

        return('GO')
    else:
        return('NOGO') 
   --------------------------------------------------------------------------
 5   Given an integer and limit, return a list of even multiples of the integer up to and including the limit.
For example, if integer = 3 and limit = 30, the returned list should be [0,6,12,18,24,30].
Note, 0 is a multiple of any integer except 0 itself.
  
  def q1(integer, limit):
    return [n for n in range(0, limit+1) if n % integer == 0]
-----------------------------------------------------------------------------
6  Given two filenames, return a list whose elements consist of line numbers for which the
two files differ. The first line is considered line 0.

def q1(f0, f1):
  diffs = []
  linenumber = 0
  with open(f0) as file1, open(f1) as file2:
    for l0,l1 in zip(file1,file2):
      if l0 != l1:
        diffs.append(linenumber)
      linenumber += 1
  return diffs
  
    pass
--------------------------------------------------------------------------------------
7 As you iterate through the given list, return the first duplicate value you come across.
For example, if given [5,7,9,1,3,7,9,5], the returned value should be 7.

seen = []
for i in lst:
  if i in seen:
    return i
  else:
    seen.append(i)

def q1(lst):
    l1 = []
    for i in lst:
        if i not in l1:
            l1.append(i)
        else: 
            return(i)  
    pass
 ---------------------------------------------------------------------------------
 8  Given a sentence as a string with words being separated by a single space, return the length of the shortest word.
 
 return len(min(strng.split(), key=len))
 +/
 def q1(strng):
    bob = strng.split(" ")
    for words in bob:
        shortwrd = len(min(bob))
    return shortwrd
  -------------------------------------------------------------------------------------
  9 Given an alphanumeric string, return the character whose ascii value is that of the integer represenation of 
  all of the digits in the string concatenated in the order in which they appear.
For example, given 'hell9oworld7', the returned character should be 'a' which has the ascii value of 97.

def q1(strng):
  chars = ' '
  for c in strng:
    if c.isnumeric():
      chars += c
  return chr(int(chars))
    pass
-------------------------------------------------------------------------------------
10  Given a list of positive integers sorted in ascending order, return the first non-consecutive value.
If all values are consecutive, return None.
For example, given [1,2,3,4,6,7], the returned value should be 6.

for i in range(len(arr)):
  if (arr[i+1] - arr[i]) != 1:
    return arr[i+1]
+/

---------------------------------------------------------------------------------------
