
awk  [options]  selection_criteria{action} input-file > outputfile
awk -F: ‘{print $1}’
awk -F: ‘($3==0) {print $1}’ /etc/passwd
```````````````````````````````````````````````````````````
coffeeshop.txt
mike manager store 450000
joey barista store 45845
foxdad clerk sales 132334
IN AWK SPACES ARE THE FIELD SEPERATOR

awk '/manager/ {print}' coffeeshop.txt
    mike manager store 450000

awk '/manager|clerk/ {print}' coffeshop.txt
    mike manager store 450000
    foxdad clerk sales 132334
    
awk '{print $1.$4}' coffeshop.txt

awk '{print NR,$0}' coffeshop.txt
1 mike manager .......
2 .........
3 .......
4 .........

awk '{print NR,$NF}' coffeeshop.txt
1 45000
2 45845
3 132334
$NF prints last field
 NF prints number of fields
````````````````````````````````````````````````````````````
awk 'NR==2, NR==3 {print NR,$0}' coffeeshop.txt
2 joey barista store 45845
3 foxdad clerk sales 132334
-------------------------------------------------------------------

SORT
coffeee.txt
black tea 
black coffee
0black coffee=
1black tea

sort coffee.txt
0black coffee
1black tea
black coffee
black tea

sort -o menu.txt coffee.txt
sorts and overwrites to menu

sort by column
sort -k 2 coffeeshop.ttxt
    joey barista store 45845
    foxdad clerk sales 132334
    mike manager store 450000
    
sort -u 
removes duplicates and sorts 
------------------------------------------------------------------------

echo "Tea is better than  coffee" | awk '{$1="Coffee";$5="tea";print}'
Coffee is better than tea



------------------------------------------------------------

abcd.txt
A
A
A
b
b
b
b
a

UNIQ
uniq -c abcd.txt
4 b
1 a
3 A

uniq -D 
shows duplicates
uniq -d
shows duplicates 1 time

--------------------------------------------------------
i love tea i love tea so much i will die for tea

sed 's/tea/coffee/' tea.txt

i love coffee i love tea so much i will die for tea

only replaces  first instances on each line

/g at end globally replaces tea with coffee.
can put a number /2 instead of /g for increment replacements on each line

sed 's/tea/coffee/g' tea.txt
i love coffee i love coffee so much i will die for coffee.

sed 's/tea/coffee/2' tea.txt
i love coffee i love coffee so much i will die for tea.
-----------------------------------------------------------
IF STATEMENT

if [[conditions]]; then
    commands
elif [[conditions]]; then
    commands
else 
    commands
fi
````````````````````````````````
#!/bin/bash

if [[ -f /etc/passwd]]; then
    echo "file /etc/passwd exsists"
elif [[ ! -f /etc/passwd]]; then
    echo "file /etc/passwd doesnt"]]
else 
    echo "ERRPR"
fi
``````
chmod +x ifstatement.sh
./ifstatement.sh
---------------------------------------------
p= $(ps -elf)
echo "$p"

-------------------------------------------

sed '/crazy/d'
changes OUTPUT to remove lines with crazy

cat -n
