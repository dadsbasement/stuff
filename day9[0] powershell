xfreerdp /u:student /v:<10.50.30.229> /glyph-cache /dynamic-resolution /clipboard00 รท 100 = 21 (Not Leap)

Get-Help about_*
ExecutionPolicy

update-help

Get-help *PROCESS*

Set-Variable
New-Variable
Remove-Varible

New-Variable -Name "zipcode" -Value 98033

Get-Alias 
set-alias edit notepad.exe
del alias:edit

Get-Command 
Get-Command -Noun Process

#GET A LIST OF SERVICES
Get-Service


Read-Host = userinput

$alias:dir
  Get-Childitem
$alias:

get-alias -Definition get-childitem

cmds vs cmdlets
 ``````````````
 cmdlet native to power shell
 
 function 
 -similar to a cmdlet but writteen in powershell script language
 
 command
  refer a generic term for a terms 


all variables that are called need to be prefaced with a $

$total = 150 
$diff = 0.25

$result = total * $diff

$result

$text = "$result is {0:0%} of $total" -f $diff
        37.5 is 25% of 150 
       result   diff   total
       
multiple values can be assigned (pointing to next variable)
$x = $y = $z = 10

````````````````
$var, $var2 = 50, 100

$name = "john"
write-host " hello $name"
  hello john
write-host 'hello $name'
  hello $name
------------------------------------------
test-path  if exsits
get-variable x 
x   value 10 

$$ last token from previous commabn
$? exit status
$^ First token from previous command write-host (var blah blah)
$_ object from current pipeline
$args list of undeclared parameters
$true
$false
$home home dir
$input enumerates all input passed to a function
$null = /dev/null
$profile path to default powershell profile  
$PSVersionTable details about pwershell 
$pwd full path to current working directory
-
$env:var = "words"
------------------------------------------------------------
PS C:\Users\student> $x= Get-Process

PS C:\Users\student> $x -is [array]
True

PS C:\Users\student> 4 -is [int]
True

$x.count (for get-process it is counting each line)
121

$array = 1,2,3,4
$array = 1..4
$array
1
2
3
4

$array2 = "world, "hello", 5, 10, (Get-Date)
array2[4].Dayofweek
wednesday

$array2[-1]
#(Get-date)
wenesday feb blah blah 

$x = Get-Process
$x[1,4,8,12]

Handles  NPM(K)    PM(K)      WS(K)     CPU(s)     Id  SI ProcessName                                     
-------  ------    -----      -----     ------     --  -- -----------                                     
 1  396      17     1940       2360               132   2 csrss                                           
 4  428      16     4008       8376       2.33   5816   2 ctfmon                                          
 8 2000      76    35976      67040      38.97   5396   2 explorer                                        
12  86       11     1784        268              4116   0 GoogleCrashHandler   

-----------------------------------------------------------------
$jagarray = "joe", "jim", "jan", (1, ('apple', 'pear'), 3), "jay"
$jaggaray =[3][1][1]
pear

PS C:\Users\student> $a = 1,2,3

PS C:\Users\student> $a += @(4,5,6)

PS C:\Users\student> $a
1
2
3
4
5
6
PS C:\Users\student> $a[-1]
6

PS C:\Users\student> $a += , @(7,8,9)

PS C:\Users\student> $a[-1]
7
8
9
---------------------------------------
PS C:\Users\student> @('BOOOM') * 5
BOOOM
BOOOM
BOOOM
BOOOM
BOOOM
------------------------------------
$array = @((Get-Random  -Maximum 10)..(Get-Random -Minimum 1 -Maximum 10))
range 1-10
--------------------------------
$reverse = $array[(array.length-1)..0]

--------------------------------
$array = 1..10 | % {Get-Random -minimum 1 -Maximum 10}
      10 items//for each item 
4
4
5
3
6
7
8
9
.
.
.
-----------------------------------------
$mylist = @{First = "John"; Last ="Doe"; Mid="Ron"; Age = 35}

PS C:\Users\student> $mylist

Name (key)                     Value                                                                      
----                           -----                                                                      
Last                           Doe                                                                        
First                          John                                                                       
Age                            35                                                                         
Mid                            Ron                                                                        

PS C:\Users\student> $mylist.Keys
Last
First
Age
Mid

PS C:\Users\student> $mylist.values
Doe
John
35
Ron

--------------------------------------------------
store arrays in hash table (dictionary)

$list = @{element1 = 5; array1 = 1..5; array2 = 6,7,8}

PS C:\Users\student> $list["element1"]
5

PS C:\Users\student> $list["array1"]
1
2
3
4
5

PS C:\Users\student> $list.array1[2]
3

$mylist.Date = Get-Date

$mylist
Name                           Value                                                                      
----                           -----                                                                      
element1                       5                                                                          
array1                         {1, 2, 3, 4...}                                                            
Date                           2/1/2023 3:26:03 PM                                                        
array2                         {6, 7, 8}     

$mylist.Date = "bruh"
works

$mylist.remove("Date")

-------------------------------------
PS C:\Users\student> $employee1 =@{First = "Mary"; Last = "Hopper"; ID = "001"; Job = "Software Dev"}

PS C:\Users\student> $employee2 =@{First = "John"; Last = "Williams"; ID = "002"; Job = "Web Dev"}

PS C:\Users\student> $employee1.Username = "MHopper001"

PS C:\Users\student> $employee2.Username = "JWilliams002"

PS C:\Users\student> $employee3 =@{First = "Alex"; Last = "Moran"; ID = "003"; Job = "Software Dev"}

PS C:\Users\student> $Status= @{Mary = "Management"; John = "Intermediate"; Alex = "Entry level"
